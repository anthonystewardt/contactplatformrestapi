// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using contactplatformweb;

#nullable disable

namespace contactplatformweb.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240619175200_Trainer")]
    partial class Trainer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("contactplatformweb.Entities.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndHour")
                        .HasColumnType("time");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("StartHour")
                        .HasColumnType("time");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Modality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modalities");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("contactplatformweb.Entities.ReasonForDeparture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReasonForDepartures");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndHour")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HourOfDay")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartHour")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("contactplatformweb.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("contactplatformweb.Entities.SubCampaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("SubCampaigns");
                });

            modelBuilder.Entity("contactplatformweb.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CalendarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("Cese")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("ConditionId1")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPositionState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<int?>("PositionId1")
                        .HasColumnType("int");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonForDepartureId")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonForDepartureId1")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("StateId1")
                        .HasColumnType("int");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCampaign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CalendarId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ConditionId");

                    b.HasIndex("ConditionId1");

                    b.HasIndex("PositionId");

                    b.HasIndex("PositionId1");

                    b.HasIndex("ReasonForDepartureId");

                    b.HasIndex("ReasonForDepartureId1");

                    b.HasIndex("StateId");

                    b.HasIndex("StateId1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Week", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CalendarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("Friday")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("FridayEndTime")
                        .HasColumnType("time");

                    b.Property<bool>("FridayIsActive")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("FridayStartTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("Monday")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("MondayEndTime")
                        .HasColumnType("time");

                    b.Property<bool>("MondayIsActive")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("MondayStartTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("Saturday")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("SaturdayEndTime")
                        .HasColumnType("time");

                    b.Property<bool>("SaturdayIsActive")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("SaturdayStartTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("Sunday")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("SundayEndTime")
                        .HasColumnType("time");

                    b.Property<bool>("SundayIsActive")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("SundayStartTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("Thursday")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ThursdayEndTime")
                        .HasColumnType("time");

                    b.Property<bool>("ThursdayIsActive")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("ThursdayStartTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("Tuesday")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("TuesdayEndTime")
                        .HasColumnType("time");

                    b.Property<bool>("TuesdayIsActive")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("TuesdayStartTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Wednesday")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("WednesdayEndTime")
                        .HasColumnType("time");

                    b.Property<bool>("WednesdayIsActive")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("WednesdayStartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Schedule", b =>
                {
                    b.HasOne("contactplatformweb.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("contactplatformweb.Entities.SubCampaign", b =>
                {
                    b.HasOne("contactplatformweb.Entities.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("contactplatformweb.Entities.User", b =>
                {
                    b.HasOne("contactplatformweb.Entities.Calendar", "Calendar")
                        .WithMany("Users")
                        .HasForeignKey("CalendarId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("contactplatformweb.Entities.Campaign", "Campaign")
                        .WithMany("Users")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("contactplatformweb.Entities.Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("contactplatformweb.Entities.Condition", null)
                        .WithMany("Users")
                        .HasForeignKey("ConditionId1");

                    b.HasOne("contactplatformweb.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("contactplatformweb.Entities.Position", null)
                        .WithMany("Users")
                        .HasForeignKey("PositionId1");

                    b.HasOne("contactplatformweb.Entities.ReasonForDeparture", "ReasonForDeparture")
                        .WithMany()
                        .HasForeignKey("ReasonForDepartureId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("contactplatformweb.Entities.ReasonForDeparture", null)
                        .WithMany("Users")
                        .HasForeignKey("ReasonForDepartureId1");

                    b.HasOne("contactplatformweb.Entities.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("contactplatformweb.Entities.State", null)
                        .WithMany("Users")
                        .HasForeignKey("StateId1");

                    b.Navigation("Calendar");

                    b.Navigation("Campaign");

                    b.Navigation("Condition");

                    b.Navigation("Position");

                    b.Navigation("ReasonForDeparture");

                    b.Navigation("State");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Calendar", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Campaign", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Condition", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("contactplatformweb.Entities.Position", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("contactplatformweb.Entities.ReasonForDeparture", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("contactplatformweb.Entities.State", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
